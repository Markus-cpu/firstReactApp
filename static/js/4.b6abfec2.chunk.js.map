{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/withAuthRedirect.js","utils/validators/validators.js","components/forms/FormsControls.jsx","components/forms/FormsControls.module.css","components/Infoblock/Infoblock.module.css","components/Infoblock/Infoperson/Infoperson.module.css","components/Infoblock/Myposts/Myposts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Infoblock/Infoperson/ProfileStatus/ProfileStatusWithHooks.jsx","components/Infoblock/Infoperson/Infoperson.jsx","components/Infoblock/Myposts/Myposts.jsx","components/Infoblock/Infoblock.jsx","components/Infoblock/InfoblockContainer.jsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props","to","React","connect","required","value","maxLengthCreator","maxLength","FormControl","input","meta","touched","error","children","hasError","className","s","formControls","Textarea","restProps","child","Input","module","exports","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","type","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","Infoperson","profile","c","info_block","avatar","src","photos","large","alt","description","infoname","fullName","info","text","aboutMe","date","contacts","facebook","Preloader","Myposts","memo","info_post","new_post","avaName","items","id","item","massage","PostForm","console","log","onSubmit","handleSubmit","Field","textarea","placeholder","name","component","validate","button","PostReduxForm","reduxForm","form","Infoblock","mypostElement","mypostData","map","mypost","post","img","inputpost","values","addPost","addNewPostText","InfoblockContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","compose","contentPage","myNewPost","withRouter"],"mappings":"wGACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,iKEbHW,EAA4B,SAACC,GAC/B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAGdE,EAAkB,SAACC,GAAc,IACpCC,EADmC,4MAErCC,OAAQ,WACJ,OAAI,EAAKC,MAAMN,OACR,kBAACG,EAAc,EAAKG,OADG,kBAAC,IAAD,CAAUC,GAAI,YAHX,YACTC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAoCL,K,iCCf7E,oEAAO,IAAMM,EAAU,SAAAC,GACnB,IAAGA,EACH,MAAO,qBAGEC,EAAkB,SAACC,GAAD,OAAc,SAACF,GAC1C,GAAGA,GAASA,EAAMpB,OAASsB,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,gB,oJCHpCC,EAAa,SAAC,GAA6C,EAA5CC,MAA6C,IAAD,IAArCC,KAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAQC,EAAa,EAAbA,SAC1CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAEC,aAAe,KAAOH,EAAWE,IAAEJ,MAAQ,KACxDC,EACAC,GAAY,6BAAK,8BAAOF,MAKxBM,EAAU,SAAClB,GAAU,IACvBS,EAAoCT,EAApCS,MAAuBU,GAAanB,EAA7BU,KAA6BV,EAAvBoB,MADS,YACcpB,EADd,2BAE7B,OAAO,kBAACQ,EAAgBR,EAAO,8CAAcS,EAAWU,MAE/CE,EAAO,SAACrB,GAAU,IACpBS,EAAoCT,EAApCS,MAAuBU,GAAanB,EAA7BU,KAA6BV,EAAvBoB,MADM,YACiBpB,EADjB,2BAE1B,OAAO,kBAACQ,EAAgBR,EAAO,2CAAWS,EAAWU,O,oBCnBzDG,EAAOC,QAAU,CAAC,MAAQ,+B,oBCA1BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAW,4BAA4B,OAAS,4B,oBCA3GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,YAAc,gCAAgC,WAAa,+BAA+B,KAAO,2B,oBCAvJD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,SAAW,0BAA0B,KAAO,sBAAsB,MAAQ,uBAAuB,QAAU,2B,oKCGrJ,SAASC,EAAeC,EAAK7C,GAC1C,OCLa,SAAyB6C,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAK7C,GACjD,GAAsB,qBAAXgD,QAA4BA,OAAOC,YAAY9C,OAAO0C,GAAjE,CACA,IAAIK,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKX,EAAIG,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAG9B,QAETzB,GAAKkD,EAAK7C,SAAWL,GAH8CmD,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBL,EAAK7C,IAAM,OAAA6D,EAAA,GAA2BhB,EAAK7C,IGLjF,WACb,MAAM,IAAI8D,UAAU,6IHIgF,GIHtG,IA4CeC,EA5Ce,SAAC3C,GAAU,IAAD,IACJ4C,oBAAS,GADL,GAC7BC,EAD6B,KACnBC,EADmB,SAERF,mBAAS5C,EAAM+C,QAFP,GAE7BA,EAF6B,KAErBC,EAFqB,KAGpCC,qBAAU,WACND,EAAUhD,EAAM+C,UACjB,CAAC/C,EAAM+C,SAmBV,OACI,qCACMF,GACE,6BACI,0BAAMK,cAtBE,WACpBJ,EAAY,CACRD,UAAU,MAoBwCE,IAGjDF,GACG,6BACI,2BAAOM,KAAK,OACLC,SAhBD,SAACC,GACnBL,EAAU,CACND,OAAQM,EAAEC,cAAcjD,SAeTkD,OAxBG,WACtBT,EAAY,CACRD,UAAU,IAEd7C,EAAMwD,aAAaT,IAqBAU,WAAW,EACXpD,MAAO0C,OCbnBW,EArBI,SAAC1D,GAChB,OAAKA,EAAM2D,QAIP,6BACI,yBAAK5C,UAAW6C,IAAEC,YACd,yBAAK9C,UAAW6C,IAAEE,OAAQC,IAAK/D,EAAM2D,QAAQK,OAAOC,MAAOC,IAAI,MAC/D,yBAAKnD,UAAW6C,IAAEO,aACd,yBAAKpD,UAAW6C,IAAEQ,UAAWpE,EAAM2D,QAAQU,UAC3C,yBAAKtD,UAAW6C,IAAEU,MACd,yBAAKvD,UAAW6C,IAAEW,MAAOvE,EAAM2D,QAAQa,SACvC,0BAAMzD,UAAW6C,IAAEa,MAAOzE,EAAM2D,QAAQe,SAASC,UACjD,kBAAC,EAAD,CAAwB5B,OAAQ/C,EAAM+C,OAAQS,aAAcxD,EAAMwD,mBAX3E,kBAACoB,EAAA,EAAD,O,kBCeAC,EAnBD3E,IAAM4E,MAAK,SAAA9E,GAErB,OACI,yBAAKe,UAAW6C,IAAEmB,WACd,yBAAKhE,UAAW6C,IAAEoB,UACd,yBAAKd,IAAK,IAAKnD,UAAW6C,IAAEqB,QACvBlB,IAAI,kFAFb,yBAKA,yBAAKhD,UAAW6C,IAAEsB,OACblF,EAAMmF,GACP,yBAAKpE,UAAW6C,IAAEwB,MACbpF,EAAMqF,c,oCCPrB9E,EAAaD,YAAiB,IAC9BgF,EAAUpF,IAAM4E,MAAK,SAAA9E,GAEvB,OADAuF,QAAQC,IAAI,UAER,oCACI,0BAAMC,SAAUzF,EAAM0F,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAO5E,UAAW6C,IAAEgC,SACZC,YAAY,wBACZC,KAAM,iBACNC,UAAW7E,IACX8E,SAAU,CAAC5F,IAAUG,MAGjC,4BAAQQ,UAAW6C,IAAEqC,QAArB,aAMVC,EAAgBC,YAAU,CAACC,KAAM,YAAjBD,CAA+Bb,GA0BtCe,EAxBEnG,IAAM4E,MAAK,SAAA9E,GACxB,IAAIsG,EAAgBtG,EAAMuG,WAAWC,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAOC,KAChBvB,GAAIsB,EAAOtB,GACXxG,IAAK8H,EAAOtB,QAKxE,OACI,6BACI,yBAAKpE,UAAW6C,IAAE+C,IAAK5C,IAAI,iEAAiEG,IAAI,KAChG,kBAAC,EAAD,CAAaP,QAAS3D,EAAM2D,QAASZ,OAAQ/C,EAAM+C,OAAQS,aAAcxD,EAAMwD,eAC/E,yBAAKzC,UAAW6C,IAAEgD,WACd,kBAACV,EAAD,CAAeT,SARX,SAACoB,GACb7G,EAAM8G,QAAQD,EAAOE,oBAahBT,M,wBCpBPU,E,4MAcFjH,OAAQ,WACJ,OACI,oCACI,kBAAC,EAAD,iBAAe,EAAKC,MAApB,CACW2D,QAAS,EAAK3D,MAAM2D,QACpBZ,OAAQ,EAAK/C,MAAM+C,QAAU,UAC7BS,aAAc,EAAKxD,MAAMwD,kB,kEAhB5C,IAAIyD,EAASC,KAAKlH,MAAMmH,MAAMC,OAAOH,OACrC,IAAIA,EACA,OAAgBC,KAAKlH,MAAMqH,iBAK/BH,KAAKlH,MAAMsH,WAAWL,GACtBC,KAAKlH,MAAMuH,UAAUN,O,GAZI/G,IAAML,WAuCxB2H,sBACXrH,aAdmB,SAACV,GACpB,MAAO,CACH8G,WAAY9G,EAAMgI,YAAYlB,WAC9BmB,UAAWjI,EAAMgI,YAAYC,UAC7B/D,QAASlE,EAAMgI,YAAY9D,QAC3BZ,OAAQtD,EAAMgI,YAAY1E,OAC1BsE,iBAAkB5H,EAAME,KAAKsH,OAC7BvH,OAAQD,EAAME,KAAKD,UAOE,CAACoH,YAASQ,eAAYC,cAAW/D,mBAC1DmE,IACA/H,IAHW4H,CAIbR","file":"static/js/4.b6abfec2.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect =(state)=> {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nexport const withAuthRedirect =(Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render =()=> {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n};","\r\nexport const required =value=> {\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator =(maxLength)=> (value)=> {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} simbols!`\r\n    return undefined\r\n}\r\n","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\n\r\nconst FormControl =({input, meta: {touched, error}, children})=> {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControls + \" \" + (hasError ? s.error : \"\")}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea =(props)=> {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input =(props)=> {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__3wn7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputpost\":\"Infoblock_inputpost__wurCC\",\"textarea\":\"Infoblock_textarea__2M_bH\",\"button\":\"Infoblock_button__1bxLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Infoperson_avatar__D8M2F\",\"description\":\"Infoperson_description__1W_r0\",\"info_block\":\"Infoperson_info_block__3w4dE\",\"date\":\"Infoperson_date__3o2k8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info_post\":\"Myposts_info_post__3HKef\",\"new_post\":\"Myposts_new_post__2MWae\",\"item\":\"Myposts_item__2TPH-\",\"items\":\"Myposts_items__1vIyz\",\"avaName\":\"Myposts_avaName__19UHX\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode =()=> {\r\n        setEditMode({\r\n            editMode: true\r\n        })\r\n    }\r\n    const deActivateEditMode =()=> {\r\n        setEditMode({\r\n            editMode: false\r\n        })\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange =(e)=> {\r\n        setStatus({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input type=\"text\"\r\n                           onChange={ onStatusChange }\r\n                           onBlur={ deActivateEditMode }\r\n                           autoFocus={true}\r\n                           value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport c from './Infoperson.module.css';\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst Infoperson = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={c.info_block} >\r\n                <img className={c.avatar} src={props.profile.photos.large} alt=\"#\" />\r\n                <div className={c.description}>\r\n                    <div className={c.infoname}>{props.profile.fullName}</div>\r\n                    <div className={c.info}>\r\n                        <div className={c.text}>{props.profile.aboutMe}</div>\r\n                        <span className={c.date}>{props.profile.contacts.facebook}</span>\r\n                        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Infoperson;\r\n","import React from 'react';\r\nimport c from './Myposts.module.css';\r\n\r\nconst Myposts=React.memo(props=> {\r\n\r\n    return (\r\n        <div className={c.info_post}>\r\n            <div className={c.new_post}>\r\n                <img alt={'#'} className={c.avaName}\r\n                     src=\"https://vrgames.by/sites/default/files/pictures/picture-164663-1516479456.jpg\"/>\r\n                !!!!!!!My post!!!!!!!\r\n            </div>\r\n            <div className={c.items}>\r\n                {props.id}\r\n                <div className={c.item}>\r\n                    {props.massage}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Myposts;\r\n","import React from 'react';\r\nimport c from './Infoblock.module.css';\r\nimport Infoperson from './Infoperson/Infoperson';\r\nimport Myposts from './Myposts/Myposts';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../forms/FormsControls\";\r\n\r\nconst maxLength =  maxLengthCreator(30)\r\nconst PostForm =React.memo(props=> {\r\n    console.log('render')\r\n    return (\r\n        <>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field className={c.textarea}\r\n                            placeholder=\"Your message here....\"\r\n                            name={'addNewPostText'}\r\n                            component={Textarea}\r\n                            validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <button className={c.button}>Send</button>\r\n            </form>\r\n        </>\r\n    )\r\n})\r\n\r\nconst PostReduxForm = reduxForm({form: 'postText',})(PostForm)\r\n\r\nconst Infoblock =React.memo(props => {\r\n    let mypostElement = props.mypostData.map(mypost => <Myposts massage={mypost.post}\r\n                                                                id={mypost.id}\r\n                                                                key={mypost.id}/>\r\n    );\r\n    let addNewPost =(values)=> {\r\n        props.addPost(values.addNewPostText)\r\n    };\r\n    return (\r\n        <div>\r\n            <img className={c.img} src=\"https://www.goldmansachs.com/worldwide/banner-img-1200x200.jpg\" alt=\"\" />\r\n            <Infoperson  profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={c.inputpost}>\r\n                <PostReduxForm onSubmit={addNewPost}/>\r\n                {/*<textarea onChange={ onPostChange }  value={newPostElement}\r\n                           className={c.textarea}  placeholder=\"Your message here....\"/>\r\n                 <button onClick={ onAddPost } className={c.button}>Send</button>*/}\r\n                {/*Когда происходит клик по кнопке, она вызывает функцию onAddPost, которую мы определили локально*/}\r\n            </div>\r\n            {mypostElement}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Infoblock;","import React from 'react';\r\nimport {addPost, getProfile, getStatus, updateStatus} from '../../Redux/contentPage-reducer';\r\nimport {connect} from \"react-redux\";\r\nimport Infoblock from \"./Infoblock\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n//данная контейнерная компонента является оберткой для обычной компоненты (Infoblock)\r\n//сюда приходят данные и методы из store/state\r\n//для того чтобы оставить нашу обычную компоненту чистой, без всякой лишней информации из\r\n//мира store(BLL)\r\n/*const InfoblockContainer = (props) => {\r\n    let state = props.store.getState();\r\n    let addPost =()=> {\r\n        let action = addPostActionCreator();//функция actionCreator(для создания action object\r\n        props.store.dispatch(action);\r\n    };\r\n    let PostChange =(text)=> {\r\n        let action = updateNewPostActionCreator(text);\r\n        props.store.dispatch(action);\r\n    };\r\n    return (\r\n        <div>\r\n          <Infoblock addPost={addPost} updateNewPostChange={PostChange} mypostData={state.contentPage.mypostData}\r\n                     myNewPost={state.contentPage.myNewPost} dialogsData={state.messagesPage.dialogsData}/>\r\n        </div>\r\n    )\r\n};*/\r\nclass InfoblockContainer extends React.Component {\r\n    componentDidMount() {\r\n        //при первоночальном рендеринге компоненты,\r\n        //происходит ниже вся логика\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            return userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                return this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId);//запрос на сервер\r\n        this.props.getStatus(userId);//запрос на сервер\r\n    }\r\n    render =()=> {\r\n        return (\r\n            <>\r\n                <Infoblock {...this.props}\r\n                           profile={this.props.profile}\r\n                           status={this.props.status || \"-------\"}\r\n                           updateStatus={this.props.updateStatus}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=> {\r\n    return {\r\n        mypostData: state.contentPage.mypostData,\r\n        myNewPost: state.contentPage.myNewPost,\r\n        profile: state.contentPage.profile,\r\n        status: state.contentPage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n//получить еще и данные о маршруте, т.е URL\r\n//и далее эту новую компоненту передать в connect\r\n//контейнерная компонента создается connect'ом\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(InfoblockContainer);"],"sourceRoot":""}