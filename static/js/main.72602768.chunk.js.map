{"version":3,"sources":["components/Sidebar/Friends/Friends.jsx","components/Sidebar/Sidebar.jsx","components/Home/Home.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/contact-reducer.js","Redux/redux-store.js","components/commonComponents/ErrorBoundary.jsx","App.js","index.js","Redux/auth-reducer.js","components/Sidebar/Friends/Friends.module.css","components/Header/Header.module.css","components/Preloader/Preloader.module.css","components/Preloader/Preloader.jsx","components/Sidebar/Sidebar.module.css","Redux/messagesPage-reducer.js","Redux/contentPage-reducer.js","API/api.js","utils/obj-helpers.js","Redux/usersPage-reducer.js","components/Home/Home.module.css","assets/images/avatar.jpg"],"names":["Friends","props","className","c","friendsitem","item","blockinfo","alt","ava","src","name","Sidebar","friendsElements","store","getState","messagesPage","dialogsData","slice","map","dialog","key","id","sidebar","menu","to","activeClassName","activeLink","blockfriend","Home","Header","header","loginBlock","isAuth","itemBlock","userPhoto","email","onClick","logout","HeaderContainer","render","React","Component","compose","connect","state","auth","login","img","inintialState","initialized","initializedSuccess","type","appReducer","action","sidebarReducer","fullName","phoneNumber","contactReducer","reducers","combineReducers","contentPage","contentPageReducer","messagesPageReducer","usersPage","usersPageReducer","contactPage","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","ErrorBoundary","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","DialogsContainer","lazy","UsersContainer","ContactContainer","InfoblockContainer","Login","Email","App","componentDidMount","initializeApp","Preloader","path","fallback","AppContainer","withRouter","dispatch","promise","getAuth","Promise","all","then","MarkusCpuApp","ReactDOM","document","getElementById","userId","setAuthUserData","payLoad","a","authAPI","getAuthMe","data","resultCode","password","rememberMe","message","messages","length","stopSubmit","module","exports","wrapper","ldsRoller","messagesData","addMessage","addNewMessageBody","newMessage","mypostData","post","profile","status","addPost","addNewPostText","getProfile","profileAPI","getStatus","updateStatus","updateUserStatus","newPost","Date","now","filter","p","postId","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","unfollow","delete","follow","put","updateObjInArray","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","usersId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingInProgress","requestUsers","requestPage","items","count","totalCount","onUnSubscription","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.72602768.chunk.js","sourcesContent":["import React from 'react';\r\nimport  c from './Friends.module.css';\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Friends =(props)=> {\r\n    return (\r\n        <div className={c.friendsitem}>\r\n\r\n            {/*<NavLink to='/friends/' className={c.block}>Friends</NavLink>*/}\r\n            <div className={c.item}>\r\n                <div className={c.blockinfo}>\r\n                    <img alt={'#'} className={c.ava} src={props.ava} />\r\n                    <div className={c.name}>{props.name}</div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport  c from './Sidebar.module.css';\r\nimport Friends from './Friends/Friends'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Sidebar =(props)=> {\r\n    let state = props.store.getState();\r\n    let friendsElements = state.messagesPage.dialogsData.slice(0, 3).map(dialog  => <Friends key={dialog.id} name={dialog.name} id={dialog.id} ava={dialog.ava}/>);\r\n    //let menuElements = props.state.sidebar.menuLink.map(menulink => <MenuLink link={menulink.link} path={menulink.id}/>);\r\n\r\n    return (\r\n       <div className={c.sidebar}>\r\n           {/*{menuElements}*/}\r\n           <nav className={c.menu}>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/home\" activeClassName={c.activeLink}>Home</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to='/infoblock/:userId' activeClassName={c.activeLink}>Profile</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/contact\" activeClassName={c.activeLink}>Contact</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/dialogs\" activeClassName={c.activeLink}>Dialogs</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/email\" activeClassName={c.activeLink}>Email</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/users\" activeClassName={c.activeLink}>Users</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/login\" activeClassName={c.activeLink}>Login</NavLink>\r\n               </div>\r\n               <div className={c.item}>\r\n                   <NavLink to=\"/friends\" activeClassName={c.activeLink}>Friends</NavLink>\r\n               </div>\r\n           </nav>\r\n            <div className={c.blockfriend}>\r\n               {friendsElements}\r\n            </div>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport c from './Home.module.css';\r\n\r\n\r\nconst Home =()=> {\r\n    return (\r\n        <div className={c.item}>\r\n            My home\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport c from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header =(props)=> {\r\n    return (\r\n       <header className={c.header}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR7zhd8Ix2QIUD8TdT-pHzXqDbo7iCP0pPlZuk7-M8H8MmUkGD4&usqp=CAU\" alt=\"/\" className=\"logo\"/>\r\n            <div className= {c.item} >\r\n               out of society\r\n            </div>\r\n            <div className={c.loginBlock}>\r\n                { props.isAuth ? <div className={c.itemBlock}><img alt={'#'} src={props.userPhoto}/>\r\n                    <div>{props.email} <button onClick={props.logout}>Log out</button></div></div> : <NavLink to=\"/login\">Login</NavLink> }\r\n            </div>\r\n       </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render =()=> {\r\n        return <>\r\n            <Header { ...this.props} />\r\n        </>\r\n    };\r\n}\r\nconst mapStateToProps =(state)=> ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userPhoto: state.auth.img,\r\n    email: state.auth.email\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout})\r\n)(HeaderContainer);","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet inintialState = {\r\n    initialized: false\r\n};\r\nconst appReducer =(state = inintialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const initializedSuccess = ()=> ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp =()=> dispatch=> {\r\n    let promise = dispatch(getAuth())\r\n    Promise.all([promise]).then(()=> {\r\n        dispatch((initializedSuccess))\r\n    })\r\n};\r\n\r\nexport default appReducer;","let inintialState = {};\r\n\r\nconst sidebarReducer =(state = inintialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default  sidebarReducer;","let inintialState = {\r\n        id: 1,\r\n        fullName: 'Markus-cpu',\r\n        email: 'markbass82@gmail.com',\r\n        phoneNumber: '+7999-888-77-77'\r\n};\r\n\r\nconst contactReducer =(state = inintialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default  contactReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport messagesPageReducer from \"./messagesPage-reducer\";\r\nimport contentPageReducer from \"./contentPage-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersPageReducer from \"./usersPage-reducer\";\r\nimport contactReducer from \"./contact-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    contentPage: contentPageReducer,\r\n    messagesPage: messagesPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersPageReducer,\r\n    contactPage: contactReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n//устанавливаем связь с redux devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.__store__ = store;\r\nexport default store;","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {error: null, errorInfo: null}\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n        // You can also log error messages to an error reporting service here\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n\r\n\r\n    // render() {\r\n    //     if (this.state.hasError) {\r\n    //         // Можно отрендерить запасной UI произвольного вида\r\n    //         return <h1>Что-то пошло не так.....</h1>;\r\n    //     }\r\n    //\r\n    //     return this.props.children;\r\n    // }\r\n}\r\n\r\nexport default ErrorBoundary","import React, {Component, Suspense, lazy} from 'react';\r\nimport './App.css';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Home from './components/Home/Home';\r\nimport {BrowserRouter, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/Preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\nimport ErrorBoundary from \"./components/commonComponents/ErrorBoundary\";\r\n\r\n//Ленивая загрузка компонент\r\nconst DialogsContainer = lazy(()=> import('./components/Dialogs/DialogsContainer'))\r\nconst UsersContainer = lazy(()=> import('./components/Users/UsersContainer'))\r\nconst ContactContainer = lazy(()=> import(\"./components/Contact/ContactContainer\"))\r\nconst InfoblockContainer = lazy(()=> import(\"./components/Infoblock/InfoblockContainer\"))\r\nconst Login = lazy(()=> import(\"./components/Login/Login\"))\r\nconst Email = lazy(()=> import('./components/Email/Email'))\r\n\r\nclass App extends Component {\r\n    componentDidMount = () => {\r\n        this.props.initializeApp();//инициализация приложения\r\n    };\r\n    render() {\r\n        if(this.props.initialized === true) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n                    <div className=\"App\">\r\n                       <HeaderContainer/>\r\n                       <Sidebar store={this.props.store}/>\r\n                       <div className=\"App-wrapper-content\">\r\n                           <Route path=\"/Home\" render={() => <Home/>}/>\r\n                           <Suspense fallback={<div>Loading.....</div>}>\r\n                                <Switch>\r\n                                     <Route path=\"/Dialogs\" render={() => <DialogsContainer/>}/>\r\n                                     <Route path='/infoblock/:userId' render={() => <InfoblockContainer/>}/>\r\n                                     <Route path=\"/Contact\" render={() => <ContactContainer/>}/>\r\n                                     <Route path=\"/Email\" render={() => <Email/>}/>\r\n                                     <ErrorBoundary>\r\n                                          <Route path=\"/Users\" render={() => <UsersContainer/>}/>\r\n                                     </ErrorBoundary>\r\n                                     <Route path=\"/login\" render={() => <Login/>}/>\r\n                                </Switch>\r\n                           </Suspense>\r\n                       </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=> ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer =  compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MarkusCpuApp =(props)=> {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n               <AppContainer store={store}/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default MarkusCpuApp","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MarkusCpuApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n        <MarkusCpuApp />,\r\n    document.getElementById('root')\r\n)\r\n\r\n/*rerenderEntireTree(store.getState());//функция перерисовки всего дерева App, после того как state изменился\r\nstore.subscribe(() => {\r\n    let state = store.getState();\r\n    rerenderEntireTree(state);\r\n});*/\r\n\r\n","import userPhoto from '../assets/images/avatar.jpg';\r\nimport {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\n\r\nlet inintialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    img: userPhoto\r\n};\r\nconst authReducer =(state = inintialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payLoad\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst setAuthUserData = (userId, email, login, isAuth)=> ({type: SET_AUTH_USER_DATA, payLoad: {userId, email, login, isAuth}});\r\n\r\nexport const getAuth = ()=> async (dispatch)=> {\r\n    let data = await authAPI.getAuthMe()\r\n    if(data.resultCode === 0) {\r\n        let {userId, email, login} = data.data;//деструктуризация\r\n        dispatch(setAuthUserData(userId, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {email: message}))\r\n    }\r\n};\r\nexport const logout =()=> async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n    if(data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsitem\":\"Friends_friendsitem__3h-DA\",\"name\":\"Friends_name__1G8V1\",\"ava\":\"Friends_ava__hHoNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ANVm\",\"item\":\"Header_item__3zHmr\",\"loginBlock\":\"Header_loginBlock__vE6OQ\",\"itemBlock\":\"Header_itemBlock__UbVE9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__1eij1\",\"ldsRoller\":\"Preloader_ldsRoller__1fcfB\"};","import React from 'react';\r\nimport style from './Preloader.module.css';\r\nconst Preloader =()=> {\r\n    return <div className={style.wrapper}>\r\n        <div className={style.ldsRoller}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2idF0\",\"item\":\"Sidebar_item__34LOh\",\"activeLink\":\"Sidebar_activeLink__3ovnf\",\"blockfriend\":\"Sidebar_blockfriend__1ghF6\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet inintialState = {\r\n        dialogsData: [\r\n        {id: 1, name: 'Mr. Frick',  ava: 'https://vrgames.by/sites/default/files/pictures/picture-164663-1516479456.jpg'},\r\n        {id: 2, name: 'Victor', ava: 'https://i.gifer.com/ZA6h.gif'},\r\n        {id: 3, name: 'Tanya',  ava: 'https://www.newkaliningrad.ru/forum/uploads/profile/photo-23603.gif'},\r\n        {id: 4, name: 'Sveta',  ava: 'https://acomics.ru/upload/avatar/id33428-qcu0upxr41.jpg'},\r\n        {id: 5, name: 'Mark',   ava: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/RU/ru/999/EP0149-CUSA09988_00-AV00000000000001/1553560094000/image?w=100&h=100&bg_color=000000&opacity=100&_version=00_09_000'},\r\n        {id: 6, name: 'Leila',  ava: 'https://bigvis.net/temp/avatar/529avatar.gif'}],\r\n    messagesData: [\r\n        {id: 1, message: 'How are you?'},\r\n        {id: 2, message: 'What\\'s up?'},\r\n        {id: 3, message: 'What do you think about me?'},\r\n        {id: 4, message: 'Who Am I?'},\r\n        {id: 5, message: 'You know me, my friend?'},\r\n        {id: 6, message: 'No, I\\'m not!'}],\r\n};\r\n\r\nconst messagesPageReducer = (state = inintialState, action) => {//принимаем тот state, который необходим данной функции reducer\r\n    //let stateCopy;\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {//сюда добавляем новое значение (сообщение)\r\n                id: 5,\r\n                message: action.addNewMessageBody\r\n            };\r\n            return {//сразу возвращаем объект\r\n                //копируем state\r\n                ...state,\r\n                //далее копируем массив, и push'им newMessage в него\r\n                messagesData: [...state.messagesData, newMessage],\r\n                //обнуляем поле в textarea\r\n            };\r\n            /*stateCopy.messagesData = [...state.messagesData];\r\n            stateCopy.messagesData.push(newMessage);\r\n            stateCopy.newMessages = '';*/\r\n            /*state.messagesData.push(newMessage);//записываем в ассоциативный массив, новый объект с данными\r\n            state.newMessages = '';//обнуления поля*/\r\n            //return stateCopy;//возвращаем новый, преобразованный state\r\n        }\r\n            //stateCopy.messagesData = [...state.messagesData];\r\n            //stateCopy.newMessages = action.newMessage;//записываем это значение, которое приходит из вне,\r\n            // в объект messagesPage  и присваеваем это значение свойству newMessages, изменяем state\r\n            //return stateCopy;//возвращаем новый, преобразованный state\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addMessage =(addNewMessageBody)=> ({type: ADD_MESSAGE, addNewMessageBody});\r\nexport default messagesPageReducer;","import {profileAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\nconst UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet inintialState = {\r\n    mypostData: [\r\n        {id: 1, post: 'React изначально был спроектирован так, чтобы его можно было внедрять постепенно. Другими словами, вы можете начать с малого и использовать только ту функциональность React, которая необходима вам в данный момент. Информация в этом разделе будет полезна в любой ситуации: при первом знакомстве с React, при создании простой динамической HTML-страницы и даже при проектировании сложного React-приложения.'},\r\n        {id: 2, post: 'Но раньше, в старые времена, прямого доступа к прототипу объекта не было.'},\r\n    ],\r\n    profile: null,\r\n    status: ' '\r\n};\r\n\r\n//здесь принимаем тот state, который необходим данному reducer\r\nconst contentPageReducer =(state = inintialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: Date.now().toString(),\r\n                post: action.addNewPostText\r\n            };\r\n            return {//сразу возвращаем данный обьект, и не нужно создавать stateCopy(переменную)\r\n                ...state,\r\n                mypostData: [...state.mypostData, newPost],//слева закидываем старый массив с данными\r\n                //а справа записываем новый элемент\r\n            };//создание копии объекта state поверхностно\r\n            /*stateCopy.mypostData = [...state.mypostData]; //копируем отдельно массив mypostData\r\n            stateCopy.mypostData.push(newPost);//\r\n            stateCopy.myNewPost = '';*/\r\n            /*state.mypostData.push(newPost);//я обращаюсь к contentPage  по имени параметра\r\n            state.myNewPost = '';*/\r\n            //return stateCopy;//возвращаем измененный state\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                post: state.mypostData.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setUserProfile =(profile)=> ({type: SET_USER_PROFILE, profile: profile});\r\nconst setUserStatus =(status)=> ({type: SET_USER_STATUS, status: status});\r\nconst updateUserStatus =(status)=> ({type: UPDATE_USER_STATUS, status: status});\r\nexport const addPost =(addNewPostText)=> ({type: ADD_POST, addNewPostText});\r\nexport const deletePost =(postId)=> ({type: DELETE_POST, postId});\r\n//Function Thunk\r\nexport const getProfile =(userId)=> {\r\n    return (dispatch)=> {\r\n        profileAPI.getProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data));\r\n            });\r\n    }\r\n};\r\nexport const getStatus =(userId)=> {\r\n    return (dispatch)=> {\r\n        profileAPI.getStatus(userId)\r\n            .then(data => {\r\n                dispatch(setUserStatus(data));\r\n            });\r\n    }\r\n};\r\nexport const updateStatus =(status)=> {\r\n    return (dispatch)=> {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if(data.resultCode === 0) {\r\n                    dispatch(updateUserStatus(status));\r\n                }\r\n            });\r\n    }\r\n};\r\nexport default  contentPageReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"01b87f20-ef4d-480a-9f9d-97e6be7daefb\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data});//мы возвращаем не то, что нам вернул get-запрос,\r\n        //а then, только то , что нам нужно(данные о пользователях)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    /*getProfile(userId) {\r\n        console.warn(\"Obsolute method. Please use profileAPI.getProfile\");\r\n        return profileAPI.getProfile(userId);\r\n    }*/\r\n};\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data});\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data});\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data});\r\n    }\r\n};\r\nexport const authAPI = {\r\n    getAuthMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n};\r\n\r\n\r\n","export const updateObjInArray =(item, itemId, objPropName, newObjProps)=> {\r\n    return item.map( u => {\r\n        if(u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        } else {\r\n            return u;\r\n        }\r\n    })\r\n}","import {usersAPI} from \"../API/api\";\r\nimport {updateObjInArray} from \"../utils/obj-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE ='SET-CURRENT-PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET-USERS-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\nlet inintialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\n//здесь принимаем тот state, который необходим данному reducer\r\nconst usersPageReducer =(state = inintialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {//сразу возвращаем данный обьект, и не нужно создавать stateCopy(переменную)\r\n                ...state,\r\n                //вспомогательная функция, помогающая нам иммьютабельно изменить объект в массиве\r\n                users: updateObjInArray(state.users, action.usersId, [\"id\"], {followed: true})\r\n                /*state.users.map( u => {\r\n                    if(u.id === action.usersId) {\r\n                        return {...u, followed: true}\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })*/\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.usersId, [\"id\"], {followed: false})\r\n                /*state.users.map( u => {\r\n                    if(u.id === action.usersId) {\r\n                        return {...u, followed: false}\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })*/\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//ДВЕ чистых функций, которые возвращают action\r\nconst followSuccess =(usersId)=> ({type: FOLLOW, usersId});\r\nconst unfollowSuccess =(usersId)=> ({type: UNFOLLOW, usersId});\r\n//С сервера придут к нам данные о users\r\n//и мы их добавим в state\r\nexport const setUsers =(users)=> ({type: SET_USERS, users});\r\nexport const setCurrentPage =(currentPage)=> ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount =(totalUsersCount)=> ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount});\r\n//анимация загрузки\r\nexport const toggleIsFetching =(isFetching)=> ({type: TOGGLE_IS_FETCHING, isFetching});\r\n//отключение кнопки, для того чтобы предотвратить множественный и один и тот же запрос\r\nexport const toggleIsFollowingInProgress =(isFetching, userId)=> ({type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, isFetching, userId});\r\n\r\n//Создаем функцию санку(thunk)\r\nexport const requestUsers =(requestPage, pageSize)=> {\r\n     return (dispatch) => {\r\n        //Preloader, анимация загрузки\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(requestPage));\r\n        //в данной функции происходит get-запрос на сервер\r\n        //мы ее экспортируем из api.js\r\n        //она возвращает нам promise(обещание)\r\n        //затем(then) мы этот ответ(response) диспатчим в store\r\n        usersAPI.getUsers(requestPage, pageSize).then(data => {\r\n            //когда данные получены, анимация исчезает\r\n            //и отображаются данные, полученные с сервера\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n        });\r\n    };\r\n};\r\n\r\nconst onUnSubscription = async(dispatch, id, apiMethod, actionCreator)=> {\r\n    dispatch(toggleIsFollowingInProgress(true, id));\r\n    let data = await apiMethod(id)\r\n    if(data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleIsFollowingInProgress(false, id));\r\n}\r\nexport const unfollow =(id)=> {\r\n    return async (dispatch) => {\r\n        await onUnSubscription(dispatch, id, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    };\r\n};\r\nexport const follow =(id)=> {\r\n    return async (dispatch) => {\r\n        await onUnSubscription(dispatch, id, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    };\r\n};\r\nexport default  usersPageReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Home_item__30jke\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.bfcf649b.jpg\";"],"sourceRoot":""}